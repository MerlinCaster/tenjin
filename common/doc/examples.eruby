% Object.class_eval "remove_const(:TRUE)"
% Object.class_eval "remove_const(:FALSE)"
% $PYTHON = $RUBY = $PERL = $JS = $PHP = false
% if @lang == 'python'
%    $PYTHON  = true
%    name    = 'pyTenjin'
%    project = 'pyTenjin'
%    command = 'pytenjin'
%    pi      = 'py'
%    PI      = 'PY'
%    Lang    = 'Python'
%    lang    = 'python'
%    prefix  = ''
%    suffix  = 'pyhtml'
%    TRUE    = 'True'
%    FALSE   = 'False'
%    NULL    = 'None'
%    ARRAY   = 'list'
%    HASH    = 'dict'
%    template_class = 'tenjin.Template'
%    engine_class   = 'tenjin.Engine'
%    context_class  = nil
%    def symbol(name)
%      return "':#{name}'"
%    end
%    imsep   = '.'
%    empty_line = "\n"
%    bufname = '_buf'
%    comment = '#'
% elsif @lang == 'ruby'
%    $RUBY    = true
%    name    = 'rbTenjin'
%    project = 'rbtenjin'
%    command = 'rbtenjin'
%    pi      = 'rb'
%    PI      = 'RB'
%    Lang    = 'Ruby'
%    lang    = 'ruby'
%    prefix  = '@'
%    suffix  = 'rbhtml'
%    TRUE    = 'true'
%    FALSE   = 'false'
%    NULL    = 'nil'
%    ARRAY   = 'Array'
%    HASH    = 'Hash'
%    template_class = 'Tenjin::Template'
%    engine_class  = 'Tenjin::Engine'
%    context_class  = 'Tenjin::Context'
%    def symbol(name)
%      return ":#{name}"
%    end
%    imsep   = '#'
%    empty_line = "\n"
%    bufname = '@_buf'
%    comment = '#'
% elsif @lang == 'perl'
%    $PERL    = true
%    name    = 'plTenjin'
%    project = 'pltenjin'
%    command = 'pltenjin'
%    pi      = 'pl'
%    PI      = 'PL'
%    Lang    = 'Perl'
%    lang    = 'perl'
%    prefix  = '$'
%    suffix  = 'plhtml'
%    TRUE    = '1'
%    FALSE   = '0'
%    NULL    = 'undef'
%    ARRAY   = 'list'
%    HASH    = 'hash'
%    template_class = 'Tenjin::Template'
%    engine_class  = 'Tenjin::Engine'
%    context_class  = 'Tenjin::Context'
%    def symbol(name)
%      return "':#{name}'"
%    end
%    imsep   = '::'
%    empty_line = ""
%    bufname = '@_buf'
%    comment = '#'
% elsif @lang == 'js'
%    $JS      = true
%    name    = 'jsTenjin'
%    project = 'jstenjin'
%    command = 'jstenjin'
%    pi      = 'js'
%    PI      = 'JS'
%    Lang    = 'JavaScript'
%    lang    = 'js'
%    prefix  = ''
%    suffix  = 'jshtml'
%    TRUE    = 'true'
%    FALSE   = 'false'
%    NULL    = 'null'
%    ARRAY   = 'array'
%    HASH    = 'object'
%    template_class = 'Tenjin.Template'
%    engine_class  = 'Tenjin.Engine'
%    context_class  = 'Tenjin.Context'
%    def symbol(name)
%      return "':#{name}'"
%    end
%    imsep   = '.'
%    empty_line = "\n"
%    bufname = '_buf'
%    comment = '//'
% elsif @lang == 'php'
%    $PHP    = true
%    name    = 'phpTenjin'
%    project = 'phptenjin'
%    command = 'phptenjin'
%    pi      = 'php'
%    PI      = 'PHP'
%    Lang    = 'PHP'
%    lang    = 'php'
%    prefix  = ''
%    suffix  = 'phtml'
%    TRUE    = 'TRUE'
%    FALSE   = 'FALSE'
%    NULL    = 'NULL'
%    ARRAY   = 'array'
%    HASH    = 'array'
%    template_class = 'Tenjin_Template'
%    engine_class   = 'Tenjin_Engine'
%    context_class  = ''
%    def symbol(name)
%      return "':#{name}'"
%    end
%    imsep   = '->'
%    empty_line = "\n"
%    bufname = ''
%    comment = '//'
% else
%    assert false
% end
% n = 0    # example counter
%
.=title:	[%= name %] Examples
.?lastupdate:	$Date$
.?release:	$Release$
.?stylesheet:	docstyle.css

.#Release: $Release$


Table of Contents:
.<<< examples.toc



.$ Bordered Table		| bordered-table


% if $PYTHON


.? Template: 'table.[%=suffix%]'
.-------------------- table/table.[%=suffix%]
<html>
  <body>
    <h1>{{*${title}*}}</h1>
    <table>
{{*<?py i = 0 ?>*}}
{{*<?py for item in items: ?>*}}
{{*<?py     i += 1 ?>*}}
{{*<?py     color = i % 2 == 0 and '#FFCCCC' or '#CCCCFF' ?>*}}
      <tr bgcolor="{{*#{color}*}}">
        <td>{{*#{i}*}}</td>
        <td>{{*${item}*}}</td>
      </tr>
{{*<?py #endfor ?>*}}
    </table>
  </body>
</html>
.--------------------

.? Convert into Python script:
.==================== table/table_s.result
$ [%=command%] -a convert table.[%=suffix%]
_buf = []; _buf.extend(('''<html>
  <body>
    <h1>''', {{*escape(to_str(title))*}}, '''</h1>
    <table>\n''', ));
{{*i = 0*}}
{{*for item in items:*}}
    {{*i += 1*}}
    {{*color = i % 2 == 0 and '#FFCCCC' or '#CCCCFF'*}}
    _buf.extend(('''      <tr bgcolor="''', {{*to_str(color)*}}, '''">
        <td>''', {{*to_str(i)*}}, '''</td>
        <td>''', {{*escape(to_str(item))*}}, '''</td>
      </tr>\n''', ));
{{*#endfor*}}
_buf.extend(('''    </table>
  </body>
</html>\n''', ));
print ''.join(_buf)
.====================

.? Main program: 'table.[%=pi%]'
.-------------------- table/table.[%=pi%]
## create Engine object
import tenjin
from tenjin.helpers import *
{{*engine = tenjin.Engine()*}}

## render template with context data
context = { 'title': 'Bordered Table Example',
            'items': [ '<AAA>', 'B&B', '"CCC"' ] }
{{*output = engine.render('table.pyhtml', context)*}}
print output,
.--------------------


% elsif $RUBY


.? Template: 'table.[%=suffix%]'
.-------------------- table/table.[%=suffix%]
<html>
  <body>
    <h1>{{*${@title}*}}</h1>
    <table>
{{*<?rb i = 0 ?>*}}
{{*<?rb for item in @items ?>*}}
{{*<?rb    i += 1 ?>*}}
{{*<?rb    color = i % 2 == 0 ? '#FFCCCC' : '#CCCCFF' ?>*}}
      <tr bgcolor="{{*#{color}*}}">
        <td>{{*#{i}*}}</td>
        <td>{{*${item}*}}</td>
      </tr>
{{*<?rb end ?>*}}
    </table>
  </body>
</html>
.--------------------

.? Convert into Ruby script:
.==================== table/table_s.result
$ [%=command%] -a convert table.[%=suffix%]
_buf = '';  _buf << %Q`<html>
  <body>
    <h1>{{*#{escape((@title).to_s)}*}}</h1>
    <table>\n`
{{*i = 0*}}
{{*for item in @items*}}
   {{*i += 1*}}
   {{*color = i % 2 == 0 ? '#FFCCCC' : '#CCCCFF'*}}
 _buf << %Q`      <tr bgcolor="{{*#{color}*}}">
        <td>{{*#{i}*}}</td>
        <td>{{*#{escape((item).to_s)}*}}</td>
      </tr>\n`
{{*end*}}
 _buf << %Q`    </table>
  </body>
</html>\n`
_buf.to_s
.====================

.? Main program: 'table.[%=pi%]'
.-------------------- table/table.[%=pi%]
## create Engine object
require 'tenjin'
{{*engine = Tenjin::Engine.new()*}}

## render template with context data
context = { :title => 'Bordered Table Example',
            :items => [ '<AAA>', 'B&B', '"CCC"' ] }
{{*output = engine.render('table.rbhtml', context)*}}
puts output
.--------------------


% elsif $PERL


.? Template: 'table.[%=suffix%]'
.-------------------- table/table.[%=suffix%]
<html>
  <body>
    <h1>{{*[=$title=]*}}</h1>
    <table>
{{*<?pl my $i = 0; ?>*}}
{{*<?pl for my $item (@$items) { ?>*}}
{{*<?pl     my $color = ++$i % 2 == 0 ? '#FFCCCC' : '#CCCCFF'; ?>*}}
      <tr bgcolor="{{*[==$color=]*}}">
        <td>{{*[==$i=]*}}</td>
        <td>{{*[=$item=]*}}</td>
      </tr>
{{*<?pl } ?>*}}
    </table>
  </body>
</html>
.--------------------

.? Convert into Python script:
.==================== table/table_s.result
$ [%=command%] -a convert table.[%=suffix%]
my @_buf = (); push(@_buf, q`<html>
  <body>
    <h1>`, escape($title), q`</h1>
    <table>
`, ); my $i = 0;
for my $item (@$items) {
    my $color = ++$i % 2 == 0 ? '#FFCCCC' : '#CCCCFF';
push(@_buf, q`      <tr bgcolor="`, $color, q`">
        <td>`, $i, q`</td>
        <td>`, escape($item), q`</td>
      </tr>
`, ); }
push(@_buf, q`    </table>
  </body>
</html>
`, ); join('', @_buf);
.====================

.? Main program: 'table.[%=pi%]'
.-------------------- table/table.[%=pi%]
## create Engine object
use strict;
use Tenjin;
$Tenjin::USE_STRICT = 1;  # optional
{{*my $engine = new Tenjin::Engine();*}}

## render template with context data
my $context = { title=>'Bordered Table Example',
                items=>[ '<AAA>', 'B&B', '"CCC"' ] };
{{*my $output = $engine->render('table.plhtml', $context);*}}
print $output;
.--------------------


% elsif $JS


.? Template: 'table.[%=suffix%]'
.-------------------- table/table.[%=suffix%]
<html>
  <body>
    <h1>{{*${title}*}}</h1>
    <table>
{{*<?js for (var i = 0, n = items.length; i < n; i++) { ?>*}}
{{*<?js    var color = i % 2 == 1 ? '#FFCCCC' : '#CCCCFF'; ?>*}}
      <tr bgcolor="{{*#{color}*}}">
        <td>{{*#{i+1}*}}</td>
        <td>{{*${items[i]}*}}</td>
      </tr>
{{*<?js } ?>*}}
    </table>
  </body>
</html>
.--------------------

.? Convert into Ruby script:
.==================== table/table_s.result
$ [%=command%] -a convert table.[%=suffix%]
var _buf = [];  _buf.push('<html>\n\
  <body>\n\
    <h1>', {{*escapeXml(title)*}}, '</h1>\n\
    <table>\n');
 {{*for (var i = 0, n = items.length; i < n; i++) {*}}
    {{*var color = i % 2 == 1 ? '#FFCCCC' : '#CCCCFF';*}}
 _buf.push('      <tr bgcolor="', {{*color*}}, '">\n\
        <td>', {{*i+1*}}, '</td>\n\
        <td>', {{*escapeXml(items[i])*}}, '</td>\n\
      </tr>\n');
 }
 _buf.push('    </table>\n\
  </body>\n\
</html>\n');
_buf.join('')
.====================

.? Main program: 'table.[%=pi%]'
.-------------------- table/table.[%=pi%]
/// create Engine object
load('tenjin.js');
{{*var engine = new Tenjin.Engine()*}}

/// render template with context data
var context = { title: 'Bordered Table Example',
                items: [ '<AAA>', 'B&B', '"CCC"' ] };
{{*var output = engine.render('table.jshtml', context);*}}
print(output);
.--------------------


% elsif $PHP


.? Template: 'table.[%=suffix%]'
.-------------------- table/table.[%=suffix%]
<html>
  <body>
    <h1>{{*{=$title=}*}}</h1>
    <table>
{{*<?php $i = 0; ?>*}}
{{*<?php foreach ($items as $item) { ?>*}}
{{*<?php     $color = ++$i % 2 == 0 ? '#FFCCCC' : '#CCCCFF'; ?>*}}
      <tr bgcolor="{{*{==$color=}*}}">
        <td>{{*{==$i=}*}}</td>
        <td>{{*{=$item=}*}}</td>
      </tr>
{{*<?php } ?>*}}
    </table>
  </body>
</html>
.--------------------

.? Convert into PHP script:
.==================== table/table_s.result
$ [%=command%] -a convert table.[%=suffix%]
<?php echo '<html>
  <body>
    <h1>', {{*htmlspecialchars($title)*}}, '</h1>
    <table>
'; $i = 0; 
 {{*foreach ($items as $item) {*}} 
     {{*$color = ++$i % 2 == 0 ? '#FFCCCC' : '#CCCCFF';*}} 
echo '      <tr bgcolor="', {{*$color*}}, '">
        <td>', {{*$i*}}, '</td>
        <td>', {{*htmlspecialchars($item)*}}, '</td>
      </tr>
'; {{*}*}} 
echo '    </table>
  </body>
</html>
';
?>
.====================

.? Main program: 'table.[%=pi%]'
.-------------------- table/table.[%=pi%]
<?php
// create Engine object
require_once('Tenjin.php');
{{*$engine = new Tenjin_Engine();*}}

// render template with context data
$context = array('title'=>'Bordered Table Example',
                 'items'=>array('<AAA>', 'B&B', '"CCC"'));
{{*$output = $engine->render('table.phtml', $context);*}}
echo $output;
?>
.--------------------


% else raise "*** error" end


.? Result:
.==================== table/table.result
$ [%=lang%] table.[%=pi%]
<html>
  <body>
    <h1>Bordered Table Example</h1>
    <table>
      <tr bgcolor="{{*#CCCCFF*}}">
        <td>{{*1*}}</td>
        <td>{{*&lt;AAA&gt;*}}</td>
      </tr>
      <tr bgcolor="{{*#FFCCCC*}}">
        <td>{{*2*}}</td>
        <td>{{*B&amp;B*}}</td>
      </tr>
      <tr bgcolor="{{*#CCCCFF*}}">
        <td>{{*3*}}</td>
        <td>{{*&quot;CCC&quot;*}}</td>
      </tr>
    </table>
  </body>
</html>
% _buf << "\n" if $JS
.====================



.$ Form		| form


% if $PYTHON


.? Template: 'form.[%=suffix%]':
.-------------------- form/form.[%=suffix%]
{{*<?py #@ARGS action, params, label ?>*}}
<form action="{{*${action}*}}" method="post">
  <p>
    <label>Name:</label>
    <input type="text" name="name" value="{{*${params.get('name')}*}}" />
  </p>
  <p>
    <label>Gender:</label>
{{*<?py gender = params.get('gender') ?>*}}
{{*<?py checked = {True:' checked="checked"', False:''} ?>*}}
    <input type="radio" name="gender" value="M" {{*#{checked[gender=='M']}*}} />Man
    <input type="radio" name="gender" value="W" {{*#{checked[gender=='W']}*}} />Woman
  </p>
  <input type="submit" value="{{*${label}*}}" />
</form>
.--------------------

.? Template: 'create.[%=suffix%]':
.-------------------- form/create.[%=suffix%]
<?py _context['title'] = 'Create user' ?>
<?py _context['label'] = 'Create' ?>
<?py _context['action'] = 'action.cgi' ?>
{{*<?py include(':form') ?>*}}
.--------------------

.? Template: 'update.[%=suffix%]':
.-------------------- form/update.[%=suffix%]
<?py _context['title'] = 'Update user' ?>
<?py _context['label'] = 'Update' ?>
<?py _context['action'] = 'update.cgi' ?>
{{*<?py include(':form') ?>*}}
.--------------------

.? Layout template: 'layout.[%=suffix%]'
.-------------------- form/layout.[%=suffix%]
<html>
 <body>
  <h1>${title}</h1>
  <div class="main-content">
{{*#{_content}*}}
  </div>
 </body>
</html>
.--------------------

.? Main program: 'main.[%=pi%]':
.-------------------- form/main.[%=pi%]
## create Engine object
import tenjin
from tenjin.helpers import *
.#{{*from tenjin.helpers.html import checked*}}  # use helper function
{{*engine = tenjin.Engine(postfix='.pyhtml', layout='layout.pyhtml')*}}

## render template with context data
params = { 'name': 'Foo', 'gender': 'M' }
context = { 'params': params }
{{*output = engine.render(':update', context)*}}   # ':update' == 'update'+postfix
print output,
.--------------------



% elsif $RUBY


.? Template: 'form.[%=suffix%]':
.-------------------- form/form.[%=suffix%]
{{*<?rb #@ARGS action, params, label ?>*}}
<form action="{{*${@action}*}}" method="post">
  <p>
    <label>Name:</label>
    <input type="text" name="name" value="{{*${@params[:name]}*}}" />
  </p>
  <p>
    <label>Gender:</label>
{{*<?rb gender = @params[:gender] ?>*}}
    <input type="radio" name="gender" value="M" {{*#{checked(gender=='M')}*}} />Man
    <input type="radio" name="gender" value="W" {{*#{checked(gender=='W')}*}} />Woman
  </p>
  <input type="submit" value="{{*${@label}*}}" />
</form>
.--------------------

.? Template: 'create.[%=suffix%]':
.-------------------- form/create.[%=suffix%]
<?rb @title = 'Create user' ?>
<?rb @label = 'Create' ?>
<?rb @action = 'action.cgi' ?>
{{*<?rb import(:form) ?>*}}
.--------------------

.? Template: 'update.[%=suffix%]':
.-------------------- form/update.[%=suffix%]
<?rb @title = 'Update user' ?>
<?rb @label = 'Update' ?>
<?rb @action = 'update.cgi' ?>
{{*<?rb import(:form) ?>*}}
.--------------------

.? Layout template: 'layout.[%=suffix%]'
.-------------------- form/layout.[%=suffix%]
<html>
 <body>
  <h1>${@title}</h1>
  <div class="main-content">
{{*#{@_content}*}}
  </div>
 </body>
</html>
.--------------------

.? Main program: 'main.[%=pi%]':
.-------------------- form/main.[%=pi%]
## create Engine object
require 'tenjin'
{{*engine = Tenjin::Engine.new(:postfix=>'.rbhtml', :layout=>'layout.rbhtml')*}}

## render template with context data
params = { :name=>'Foo', :gender=>'M' }
context = { :params=>params }
{{*output = engine.render(:update, context)*}}   # :update == 'update'+postfix
puts output
.--------------------


% elsif $PERL


.? Template: 'form.[%=suffix%]':
.-------------------- form/form.[%=suffix%]
{{*<?pl #@ARGS action, params, label ?>*}}
<form action="{{*[=$action=]*}}" method="post">
  <p>
    <label>Name:</label>
    <input type="text" name="name" value="{{*[=$params->{name}=]*}}" />
  </p>
  <p>
    <label>Gender:</label>
{{*<?pl my $gender = $params->{gender}; ?>*}}
    <input type="radio" name="gender" value="M" {{*[==checked($gender eq 'M')=]*}} />Man
    <input type="radio" name="gender" value="W" {{*[==checked($gender eq 'W')=]*}} />Woman
  </p>
  <input type="submit" value="{{*[=$label=]*}}" />
</form>
.--------------------

.? Template: 'create.[%=suffix%]':
.-------------------- form/create.[%=suffix%]
<?pl $_context->{title} = 'Create user'; ?>
<?pl $_context->{label} = 'Create'; ?>
<?pl $_context->{action} = 'action.cgi'; ?>
{{*<?pl include(':form'); ?>*}}
.--------------------

.? Template: 'update.[%=suffix%]':
.-------------------- form/update.[%=suffix%]
<?pl $_context->{title} = 'Update user'; ?>
<?pl $_context->{label} = 'Update'; ?>
<?pl $_context->{action} = 'update.cgi'; ?>
{{*<?pl include(':form'); ?>*}}
.--------------------

.? Layout template: 'layout.[%=suffix%]'
.-------------------- form/layout.[%=suffix%]
<html>
 <body>
  <h1>[=$title=]</h1>
  <div class="main-content">
{{*[==$_content==]*}}
  </div>
 </body>
</html>
.--------------------

.? Main program: 'main.[%=pi%]':
.-------------------- form/main.[%=pi%]
use strict;

## create Engine object
use Tenjin;
$Tenjin::USE_STRICT = 1;   # optional
{{*my $engine = new Tenjin::Engine({postfix=>'.plhtml', layout=>'layout.plhtml'});*}}

## render template with context data
my $params = { name=>'Foo', gender=>'M' };
my $context = { params => $params };
{{*my $output = $engine->render(':update', $context);*}}   # ':update' == 'update'+postfix
print $output;
.--------------------


% elsif $JS


.? Template: 'form.[%=suffix%]':
.-------------------- form/form.[%=suffix%]
{{*<?js //@ARGS action, params, label ?>*}}
<form action="{{*${action}*}}" method="post">
  <p>
    <label>Name:</label>
    <input type="text" name="name" value="{{*${params.name}*}}" />
  </p>
  <p>
    <label>Gender:</label>
{{*<?js gender = params.gender ?>*}}
{{*<?js checked = Tenjin.checked ?>*}}
    <input type="radio" name="gender" value="M" {{*#{checked(gender=='M')}*}} />Man
    <input type="radio" name="gender" value="W" {{*#{checked(gender=='W')}*}} />Woman
  </p>
  <input type="submit" value="{{*${label}*}}" />
</form>
.--------------------

.? Template: 'create.[%=suffix%]':
.-------------------- form/create.[%=suffix%]
<?js _context.title = 'Create user'; ?>
<?js _context.label = 'Create'; ?>
<?js _context.action = 'action.cgi'; ?>
{{*<?js include(':form'); ?>*}}
.--------------------

.? Template: 'update.[%=suffix%]':
.-------------------- form/update.[%=suffix%]
<?js _context.title = 'Update user'; ?>
<?js _context.label = 'Update'; ?>
<?js _context.action = 'update.cgi'; ?>
{{*<?js include(':form'); ?>*}}
.--------------------

.? Layout template: 'layout.[%=suffix%]'
.-------------------- form/layout.[%=suffix%]
<html>
 <body>
  <h1>${title}</h1>
  <div class="main-content">
{{*#{_content}*}}
  </div>
 </body>
</html>
.--------------------

.? Main program: 'main.[%=pi%]':
.-------------------- form/main.[%=pi%]
/// create Engine object
load('tenjin.js');
{{*var engine = new Tenjin.Engine({postfix:'.jshtml', layout:'layout.jshtml'});*}}

/// render template with context data
var params = { name:'Foo', gender:'M' };
var context = { params:params };
{{*var output = engine.render(':update', context);*}}  // ':update' == 'update'+postfix
print(output);
.--------------------


% elsif $PHP


.? Template: 'form.[%=suffix%]':
.-------------------- form/form.[%=suffix%]
{{*<?php #@ARGS action, params, label ?>*}}
<form action="{{*{=$action=}*}}" method="post">
  <p>
    <label>Name:</label>
    <input type="text" name="name" value="{{*{=$params['name']=}*}}" />
  </p>
  <p>
    <label>Gender:</label>
    {{*<?php $gender = $params['gender']; ?>*}}
    <input type="radio" name="gender" value="M" {{*{==checked($gender=='M')=}*}} />Man
    <input type="radio" name="gender" value="W" {{*{==checked($gender=='W')=}*}} />Woman
  </p>
  <input type="submit" value="{{*{=$label=}*}}" />
</form>
.--------------------

.? Template: 'create.[%=suffix%]':
.-------------------- form/create.[%=suffix%]
<?php $_context['title'] = 'Create user'; ?>
<?php $_context['label'] = 'Create'; ?>
<?php $_context['action'] = 'action.cgi'; ?>
{{*<?php import(':form'); ?>*}}
.--------------------

.? Template: 'update.[%=suffix%]':
.-------------------- form/update.[%=suffix%]
<?php $_context['title'] = 'Update user'; ?>
<?php $_context['label'] = 'Update'; ?>
<?php $_context['action'] = 'update.cgi'; ?>
{{*<?php import(':form'); ?>*}}
.--------------------

.? Layout template: 'layout.[%=suffix%]'
.-------------------- form/layout.[%=suffix%]
<html>
 <body>
  <h1>{=$title=}</h1>
  <div class="main-content">
{{*{==$_content=}*}}
  </div>
 </body>
</html>
.--------------------

.? Main program: 'main.[%=pi%]':
.-------------------- form/main.[%=pi%]
<?php
// create Engine object
require_once('Tenjin.php');
{{*$properties = array('postfix'=>'.phtml', 'layout'=>'layout.phtml');*}}
{{*$engine = new Tenjin_Engine($properties);*}}

// render template with context data
$params = array('name'=>'Foo', 'gender'=>'M');
$context = array('params'=>$params);
{{*$output = $engine->render(':update', $context);*}}   # ':update' == 'update'+postfix
echo $output;
?>
.--------------------


% else raise "*** error" end


.? Result:
.==================== form/main.result
$ [%=lang%] main.[%=pi%]
<html>
 <body>
  <h1>{{*Update user*}}</h1>
  <div class="main-content">
<form action="{{*update.cgi*}}" method="post">
  <p>
    <label>Name:</label>
    <input type="text" name="name" value="{{*Foo*}}" />
  </p>
  <p>
    <label>Gender:</label>
    <input type="radio" name="gender" value="M" {{* checked="checked"*}} />Man
    <input type="radio" name="gender" value="W"  />Woman
  </p>
  <input type="submit" value="{{*Update*}}" />
</form>
% _buf << empty_line
  </div>
 </body>
</html>
% _buf << "\n" if $JS
.====================



.$ Preprocessing			| preprocessing


% if $PYTHON


.? Library: 'helper.[%=pi%]'
.-------------------- preprocessing/helper.[%=pi%]
languages = [
  ('en', 'Engilish'),
  ('fr', 'French'),
  ('de', 'German'),
  ('es', 'Spanish'),
  ('ch', 'Chinese'),
  ('ja', 'Japanese'),
]

import urllib
def link_to(label, action=None, id=None):
    buf = ['/app']
    if action: buf.append(action)
    if id: buf.append(id)
    return '<a href="%s">%s</a>' % (urllib.quote('/'.join(buf)), label)
.--------------------

.? Template: 'select.[%=suffix%]'
.-------------------- preprocessing/select.[%=suffix%]
<?PY import helper ?>
<?PY from helper import * ?>
<form>
  <label>Select your language:</label>
  <select name="lang">
<?py table = { params['lang']: ' selected="selected"' } ?>
{{*<?PY for val, name in languages: ?>*}}
    <option value="${{val}}" #{table.get(#{{repr(val)}}, '')}>${{name}}</option>
{{*<?PY #endfor ?>*}}
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  {{*#{{{{}}*}}link_to('Back', action='index'){{*{{}}}}*}} |
  {{*#{{{{}}*}}link_to('Show '+{{*_P('params["name"]')*}}, action='show', id={{*_p('params["id"]')*}}){{*{{}}}}*}}
</p>
.--------------------

.? Preprocessed code:
.==================== preprocessing/select_P.result
$ [%=command%] -a preprocess select.[%=suffix%]
<form>
  <label>Select your language:</label>
  <select name="lang">
<?py table = { params['lang']: ' selected="selected"' } ?>
    <option value="en" #{table.get('en', '')}>Engilish</option>
    <option value="fr" #{table.get('fr', '')}>French</option>
    <option value="de" #{table.get('de', '')}>German</option>
    <option value="es" #{table.get('es', '')}>Spanish</option>
    <option value="ch" #{table.get('ch', '')}>Chinese</option>
    <option value="ja" #{table.get('ja', '')}>Japanese</option>
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  <a href="/app/index">Back</a> |
  <a href="/app/show/{{*#{params["id"]}*}}">Show {{*${params["name"]}*}}</a>
</p>
.====================

.? Main program: 'main.[%=pi%]'
.-------------------- preprocessing/main.[%=pi%]
import helper

## create engine
import tenjin
from tenjin.helpers import *
engine = tenjin.Engine(postfix='.pyhtml', {{*preprocess=True*}})

## render template with context data
params = { 'id': 1234, 'name': 'Foo', 'lang': 'ch' }
context = { 'params': params }
output = engine.render(':select', context);
print output,
.--------------------


% elsif $RUBY


.? Library: 'helper.[%=pi%]'
.-------------------- preprocessing/helper.[%=pi%]
LANGUAGES = [
  ['en', 'Engilish'],
  ['fr', 'French'],
  ['de', 'German'],
  ['es', 'Spanish'],
  ['ch', 'Chinese'],
  ['ja', 'Japanese'],
]

def link_to(label, options={})
  action, id = options[:action], options[:id]
  url = '/app'
  url << '/' << action if action && !action.empty?
  url << '/' << id     if id
  return "<a href=\"#{CGI::escape(url).gsub(/%2F/i, '/')}\">#{label}</a>"
end
.--------------------

.? Template: 'select.[%=suffix%]'
.-------------------- preprocessing/select.[%=suffix%]
<?RB require 'helper' ?>
<form>
  <label>Select your language:</label>
  <select name="lang">
<?rb table = { @params[:lang] => ' selected="selected"' } ?>
{{*<?RB for val, name in LANGUAGES ?>*}}
    <option value="${{val}}" #{table[#{{val.inspect}}]}>${{name}}</option>
{{*<?RB end ?>*}}
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  {{*#{{{{}}*}}link_to('Back', :action=>'index'){{*{{}}}}*}} |
  {{*#{{{{}}*}}link_to('Show '+{{*_P('@params[:name]')*}}, :action=>'show', :id=>{{*_p('@params[:id]')*}}){{*{{}}}}*}}
</p>
.--------------------

.? Preprocessed code:
.==================== preprocessing/select_P.result
$ [%=command%] -a preprocess select.[%=suffix%]
<form>
  <label>Select your language:</label>
  <select name="lang">
<?rb table = { @params[:lang] => ' selected="selected"' } ?>
    <option value="en" #{table["en"]}>Engilish</option>
    <option value="fr" #{table["fr"]}>French</option>
    <option value="de" #{table["de"]}>German</option>
    <option value="es" #{table["es"]}>Spanish</option>
    <option value="ch" #{table["ch"]}>Chinese</option>
    <option value="ja" #{table["ja"]}>Japanese</option>
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  <a href="/app/index">Back</a> |
  <a href="/app/show/{{*#{@params[:id]}*}}">Show {{*${@params[:name]}*}}</a>
</p>
.====================

.? Main program: 'main.[%=pi%]'
.-------------------- preprocessing/main.[%=pi%]
require 'helper'

## create engine
require 'tenjin'
engine = Tenjin::Engine.new(:postfix=>'.rbhtml', {{*:preprocess=>true*}})

## render template with context data
params = { :id=>1234, :name=>'Foo', :lang=>'ch' }
context = { :params => params }
output = engine.render(:select, context)
puts output
.--------------------


% elsif $PERL


.? Library: 'Helper.pm'
.-------------------- preprocessing/Helper.pm
package Helper;
use Exporter;
@ISA = ('Exporter');
@EXPORT = ('link_to');

$languages = [
    ['en', 'Engilish'],
    ['fr', 'French'],
    ['de', 'German'],
    ['es', 'Spanish'],
    ['ch', 'Chinese'],
    ['ja', 'Japanese'],
];

sub link_to {
    my ($label, $args) = @_;
    my ($action, $id);
    if (defined($args)) {
        $action = $args->{action};
	$id     = $args->{id};
    }
    my @buf = ('/app');
    if ($action) { push(@buf, '/', $action); }
    if ($id) { push(@buf, '/', $id); }
    my $url = join('', @buf);
    return "<a href=\"$url\">$label</a>";
}

1;
.--------------------

.? Template: 'select.[%=suffix%]'
.-------------------- preprocessing/select.[%=suffix%]
{{*<?PL use Helper; ?>*}}
<form>
  <label>Select your language:</label>
  <select name="lang">
{{*<?pl my $table = { $params->{lang} => ' selected="selected"' }; ?>*}}
{{*<?PL for my $t (@$Helper::languages) { ?>*}}
{{*<?PL    my ($val, $name) = ($t->[0], $t->[1]); ?>*}}
    <option value="[*=$val=*]" [==$table->{[*=$val=*]}=]>[*=$name=*]</option>
{{*<?PL } ?>*}}
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  {{*[*==*}}link_to('Back', {action=>'index'}){{*=*]*}} |
  {{*[*==*}}link_to('Show '.{{*_P('$params->{name}')*}}, {action=>'show', id=>{{*_p('$params->{id}')*}}}){{*=*]*}}
</p>
.--------------------

.? Preprocessed code:
.==================== preprocessing/select_P.result
$ [%=command%] -a preprocess select.[%=suffix%]
<form>
  <label>Select your language:</label>
  <select name="lang">
<?pl my $table = { $params->{lang} => ' selected="selected"' }; ?>
    <option value="en" [==$table->{en}=]>Engilish</option>
    <option value="fr" [==$table->{fr}=]>French</option>
    <option value="de" [==$table->{de}=]>German</option>
    <option value="es" [==$table->{es}=]>Spanish</option>
    <option value="ch" [==$table->{ch}=]>Chinese</option>
    <option value="ja" [==$table->{ja}=]>Japanese</option>
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  <a href="/app/index">Back</a> |
  <a href="/app/show/{{*[==$params->{id}=]*}}">Show {{*[=$params->{name}=]*}}</a>
</p>
.====================

.? Main program: 'main.[%=pi%]'
.-------------------- preprocessing/main.[%=pi%]
use strict;

## create engine
use Tenjin;
{{*my $engine = new Tenjin::Engine({postfix=>'.plhtml', preprocess=>1});*}}

## render template with context data
my $params = { id=>1234, name=>'Foo', lang=>'ch' };
my $context = { params => $params };
{{*my $output = $engine->render(':select', $context);*}}
print $output;
.--------------------


% elsif $JS


.? Library: 'helper.[%=pi%]'
.-------------------- preprocessing/helper.[%=pi%]
var LANGUAGES = [
    ['en', 'Engilish'],
    ['fr', 'French'],
    ['de', 'German'],
    ['es', 'Spanish'],
    ['ch', 'Chinese'],
    ['ja', 'Japanese'],
];

function link_to(label, options) {
    if (! options) options = {};
    var action = options.action || null;
    var id     = options.id     || null;
    var buf = ['/app'];
    if (action) { buf.push(action); }
    if (id)     { buf.push(id); }
    var url = buf.join('/');
    return "<a href=\""+escape(url)+"\">"+label+"</a>";
}
.--------------------

.? Template: 'select.[%=suffix%]'
.-------------------- preprocessing/select.[%=suffix%]
<?JS load('helper.js'); ?>
<form>
  <label>Select your language:</label>
  <select name="lang">
<?js var table = { }; table[params.lang] = ' selected="selected"'; ?>
{{*<?JS for (var i = 0, n = LANGUAGES.length; i < n; i++) { ?>*}}
{{*<?JS     var tuple = LANGUAGES[i]; var val = tuple[0], name = tuple[1]; ?>*}}
    <option value="${{val}}" #{table.#{{val}}||''}>${{name}}</option>
{{*<?JS } ?>*}}
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  {{*#{{{{}}*}}link_to('Back', {action:'index'}){{*{{}}}}*}} |
  {{*#{{{{}}*}}link_to('Show '+{{*_P('params.name')*}}, {action:'show', id:{{*_p('params.id')*}}}){{*{{}}}}*}}
</p>
.--------------------

.? Preprocessed code:
.==================== preprocessing/select_P.result
$ [%=command%] -a preprocess select.[%=suffix%]
<form>
  <label>Select your language:</label>
  <select name="lang">
<?js var table = { }; table[params.lang] = ' selected="selected"'; ?>
    <option value="en" #{table.en||''}>Engilish</option>
    <option value="fr" #{table.fr||''}>French</option>
    <option value="de" #{table.de||''}>German</option>
    <option value="es" #{table.es||''}>Spanish</option>
    <option value="ch" #{table.ch||''}>Chinese</option>
    <option value="ja" #{table.ja||''}>Japanese</option>
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  <a href="/app/index">Back</a> |
  <a href="/app/show/{{*#{params.id}*}}">Show {{*${params.name}*}}</a>
</p>
.====================

.? Main program: 'main.[%=pi%]'
.-------------------- preprocessing/main.[%=pi%]
/// create engine
load('tenjin.js');
var engine = new Tenjin.Engine({ postfix: '.jshtml', {{*preprocess: true*}} });

/// render template with context data
var params = { id: 1234, name: 'Foo', lang: 'ch' };
var context = { params: params };
var output = engine.render(':select', context);
print(output);
.--------------------


% elsif $PHP


.? Library: 'helper.[%=pi%]'
.-------------------- preprocessing/helper.[%=pi%]
<?php
$languages = array(
    'en' => 'Engilish',
    'fr' => 'French',
    'de' => 'German',
    'es' => 'Spanish',
    'ch' => 'Chinese',
    'ja' => 'Japanese',
);

function link_to($label, $action=null, $id=null) {
    $url = '/app';
    if ($action) $url .= '/'.$action;
    if ($id)     $url .= '/'.$id;
    $url = preg_replace('/%2F/', '/', urlencode($url));
    return "<a href=\"".$url."\">$label</a>";
}
?>
.--------------------

.? Template: 'select.[%=suffix%]'
.-------------------- preprocessing/select.[%=suffix%]
<?PHP require('helper.php'); ?>
<form>
  <label>Select your language:</label>
  <select name="lang">
  <?php $lang = $params['lang']; ?>
  <?php $table = array(true=>' selected="selected"', false=>''); ?>
{{*<?PHP foreach ($languages as $val=>$name) { ?>*}}
    <option value="{*==$val=*}" {==$table[$lang=='{*==$val=*}']=}>{*=$name=*}</option>
{{*<?PHP } ?>*}}
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  {{*{*==*}}link_to('Back', 'index'){{*=*}*}} |
  {{*{*==*}}link_to('Show '.{{*_ep('$params["name"]')*}}, 'show', {{*_p('$params["id"]')*}}){{*=*}*}}
</p>
.--------------------

.? Preprocessed code:
.==================== preprocessing/select_P.result
$ [%=command%] -a preprocess select.[%=suffix%]
<form>
  <label>Select your language:</label>
  <select name="lang">
  <?php $lang = $params['lang']; ?>
  <?php $table = array(true=>' selected="selected"', false=>''); ?>
    <option value="en" {==$table[$lang=='en']=}>Engilish</option>
    <option value="fr" {==$table[$lang=='fr']=}>French</option>
    <option value="de" {==$table[$lang=='de']=}>German</option>
    <option value="es" {==$table[$lang=='es']=}>Spanish</option>
    <option value="ch" {==$table[$lang=='ch']=}>Chinese</option>
    <option value="ja" {==$table[$lang=='ja']=}>Japanese</option>
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  <a href="/app/index">Back</a> |
  <a href="/app/show/{{*{==$params["id"]=}*}}">Show {{*{=$params["name"]=}*}}</a>
</p>
.====================

.? Main program: 'main.[%=pi%]'
.-------------------- preprocessing/main.[%=pi%]
<?php
// create engine
require 'Tenjin.php';
$properties = array('postfix'=>'.phtml', {{*'preprocess'=>true*}});
$engine = new Tenjin_Engine($properties);

// render template with context data
$params = array('id'=>1234, 'name'=>'Foo', 'lang'=>'ch');
$context = array('params'=>$params);
$output = $engine->render(':select', $context);
echo $output;
?>
.--------------------


% else raise "*** error" end


.? Result:
.==================== preprocessing/main.result
$ [%=lang%] main.[%=pi%]
<form>
  <label>Select your language:</label>
  <select name="lang">
    <option value="en" >Engilish</option>
    <option value="fr" >French</option>
    <option value="de" >German</option>
    <option value="es" >Spanish</option>
    <option value="ch"  selected="selected">Chinese</option>
    <option value="ja" >Japanese</option>
  </select>
  <input type="submit" value="OK" />
</form>
<p>
  <a href="/app/index">Back</a> |
  <a href="/app/show/1234">Show Foo</a>
</p>
% _buf << "\n" if $JS
.====================
