properties:
  - release:  0.6.2
  #- package:  pyTenjin
  - package:  Tenjin

parameters:
  - copyright:          copyright(c) 2007-2008 kuwata-lab.com all rights reserved.
  #- python_basepath:    /Library/Frameworks/Python.framework/Versions/2.4
  - python_basepath:    /usr/local/lib/python2.5
  #- site_packages_path: $(python_basepath)/lib/python2.4/site-packages
  - site_packages_path: $(python_basepath)/site-packages
  - script_file:        pytenjin
  - library_files:      [ tenjin.py ]

recipes:
  - product:	:package
    desc:	create package
    ingreds:	[ :examples ]
    method*: |
	//// remove files
        $pattern = "dist/$(package)-$release*";
	if (glob($pattern)) k_delete($pattern);
	#//// create examples
	#k_delete('./examples');
	#k_copy('test/data/examples', './examples');
	#k_delete('examples/**/*.result');
	#k_delete('examples/**/*.cache');
	#k_delete('examples/**/*.pyc');
	#file_put_contents('examples/table/Makefile',
	#       "all:\n".
	#       "	python table.py\n".
	#       "\n".
	#       "clean:\n".
	#       "	rm -f *.cache\n"
	#);
	#file_put_contents('examples/preprocessing/Makefile',
	#       "all:\n".
	#       "	python main.py\n".
	#       "\n".
	#       "clean:\n".
	#       "	rm -f *.cache\n"
	#);
	#file_put_contents('examples/form/Makefile',
	#       "all:\n".
	#       "	python main.py\n".
	#       "\n".
	#       "clean:\n".
	#       "	rm -f *.cache\n"
	#);
	//// edit files
	$replacer = array(
	   array('/\$Release\$/', '$(release)'),
	   array('/\$Release:.*?\$/', '$Release: $(release) $'),
	   array('/\$Copyright\$/', '$(copyright)'),
	   array('/\$Package\$/', '$(package)'),
	);
	k_copy('setup.py.txt', 'setup.py');
	#k_echo("release=$release\n");
	k_edit($replacer, 'setup.py');
	//// setup
	k_sys('python setup.py sdist');
	#k_sys('python setup.py sdist --keep-temp');
	$d = k_chdir('dist');
	$pkgs = kook_glob("$(package)-$release.tar.gz");
	$pkg = $pkgs[0];
	#k_echo("pkg=$pkg\n");
	#k_tar_xzf($pkg);
	k_sys("tar xzf $pkg");
	$dir = preg_replace('/\.tar.gz$/', '', $pkg);
	k_edit($replacer, "$dir/**/*");
	k_chdir($dir);
	k_sys('python setup.py egg_info --egg-base .');
	k_delete('*.pyc');
	k_backdir('..');
	k_rename($pkg, $pkg.'.bkup');
	#k_tar_czf($dir.'.tar.gz', $dir);
	k_sys("tar -cf $dir.tar $dir");
	k_sys("gzip -f9 $dir.tar");
	/// create *.egg file
	k_chdir($dir);
	k_sys('python setup.py bdist_egg');
	k_move('..', 'dist/*.egg');
	k_delete('build', 'dist');
	///
	k_backdir($d);

  - product:	:examples
    desc:	create examples
    #ingreds:	[ doc/examples.txt ]
    method*: |
	/// get filenames
	$ingred = 'doc/examples.txt';
	ob_start();
	system("retrieve -l $ingred");
	$result = ob_get_clean();
	//echo "*** debug: result=", var_export($result, true), "\n";
	/// get dirnames
	$dirs = array(); // hash
	foreach (split("\n", $result) as $filename) {
	    $d = dirname($filename);
	    if ($d) $dirs[$d] = $d;
	}
	//echo "*** debug: dirs=", var_export($dirs, true), "\n";
	/// create directories
	k_delete("examples");
	k_mkdir("examples");
	foreach ($dirs as $d) {
	    k_mkdir("examples/$d");
	}
	/// retrieve files
	k_sys("retrieve -d examples $ingred");
	k_delete('examples/**/*.result');
	/// create Makefile
	foreach ($dirs as $d) {
	    $plfile = '';
	    if (file_exists("examples/$d/main.pl")) {
	       $plfile = 'main.pl';
	    } elseif (file_exists("examples/$d/table.pl")) {
	       $plfile = 'table.pl';
	    }
	    file_put_contents("examples/$d/Makefile", ""
	       ."all:\n"
	       ."	pltenjin $plfile\n"
	       ."\n"
	       ."clear:\n"
	       ."	rm -f *.cache\n"
	    );
	}

  - product:	:uninstall
    method*: |
	#$script_file    = "$python_basepath/bin/$script_file";
	#$library_files  = kook_array_prefix($library_files, $site_packages_path);
	#$compiled_files = kook_array_suffix($library_files, 'c');
	$script_file = '/usr/local/bin/pytenjin';
	$dir = '/usr/local/lib/python2.5/site-packages';
	$library_files = "$dir/$(package)*";
	k_delete($script_file, $library_files);
	$filename = "$dir/easy-install.pth";
	if (file_exists($filename)) {
	    $s = file_get_contents($filename);
	    $pattern = '/^\.\/$(package)-.*\n/m';
	    if (preg_match($pattern, $s)) {
	        //$s = preg_replace($pattern, $s);
		//file_put_contents($filename, $s);
		$replacer = array( array($pattern, '') );
	        k_edit($replacer, $filename);
	    }
	}

  - product:	:test
    method*: |
	$pwd = k_chdir('test');
	k_sys("python test_all.py 2>&1 >  test.log");
	k_backdir($pwd);

  - product:	:clean
    method*: |
	$dirs = kook_glob("examples/*");
	foreach ($dirs as $dir) {
	    if (is_dir($dir)) {
	        $pwd = k_chdir($dir);
		k_sys("make clean");
		k_backdir($pwd);
	    }
	}
